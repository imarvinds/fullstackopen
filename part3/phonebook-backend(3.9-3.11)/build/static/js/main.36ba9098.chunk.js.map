{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/contactInfo.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","props","onChange","handleChange","PersonForm","onSubmit","saveName","value","newName","handleNameChange","newNum","handleNumChange","type","Persons","persons","filter","person","name","toLowerCase","includes","searchQuery","map","key","number","onClick","event","preventDefault","deleteContact","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","ifError","className","App","useState","setPersons","setNewName","setNewNum","setSearchQuery","nmessage","setnMessage","useEffect","contactInfoService","contacts","target","contactObject","length","find","p","found","window","confirm","updatedContact","setTimeout","concat","contactToDelete","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36ba9098.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n        <div>\r\n            filter shown with <input onChange={props.handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.saveName}>\r\n            <div>\r\n                Name: <input value={props.newName} onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                Number: <input value={props.newNum} onChange={props.handleNumChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Persons = (props) =>{\r\n    return(\r\n        <form>\r\n            <div>\r\n                {props.persons.filter(person => person.name.toLowerCase().includes(props.searchQuery.toLowerCase())).map(person =>\r\n                    <div key={person.name}>{person.name} {person.number} <button onClick={(event)=>{event.preventDefault(); props.deleteContact(person.id)}}>delete</button></div>)}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/contacts'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response =>{\r\n        return response.data\r\n    }) \r\n}\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deleteContact }\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, ifError }) => {\r\n    if (message === null) {\r\n        return null\r\n    } else if(message.includes('already')) {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"noti\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport Persons from './Persons'\r\nimport contactInfoService from '../services/contactInfo'\r\nimport Notification from './Notification' \r\n\r\n\r\nconst App = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNum, setNewNum] = useState('')\r\n    const [searchQuery, setSearchQuery] = useState('') \r\n    const [nmessage, setnMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        contactInfoService\r\n            .getAll()\r\n            .then(contacts => {\r\n                setPersons(contacts)\r\n            })\r\n        }, [])\r\n\r\n    const saveName = (event) => {\r\n        event.preventDefault()\r\n        const contactObject = {\r\n            name: newName,\r\n            number: newNum,\r\n            id: persons.length + 1\r\n        }\r\n        \r\n        //Edit contact\r\n        if (persons.find(p => p.name === newName)) {\r\n            let found = persons.find(p => p.name === newName)\r\n            let confirm = window.confirm(` ${newName} is already added to phonebook, replace old number with new one? `)\r\n            if (confirm) {\r\n                const updatedContact = { ...found, number: newNum }\r\n                contactInfoService\r\n                    .update(`${found.id}`, updatedContact)\r\n                    .then( response => { setPersons(persons.map(person => person.id !== found.id ? person : response.data)) \r\n                        setnMessage(`Updated ${newName}`)\r\n                        setTimeout(() => {\r\n                            setnMessage(null)\r\n                        }, 5000)} )\r\n            }\r\n\r\n        } else {\r\n            contactInfoService\r\n                .create(contactObject)\r\n                .then(setPersons(persons.concat(contactObject)))\r\n                setnMessage(`Added ${newName}`)\r\n                setTimeout(() => {\r\n                    setnMessage(null)\r\n                }, 5000)\r\n        }\r\n        setNewName('')\r\n        setNewNum('')\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumChange = (event) => {\r\n        setNewNum(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setSearchQuery(event.target.value)\r\n    }\r\n\r\n    const deleteContact = (id) => {\r\n        const contactToDelete = persons.find(p => p.id === id)\r\n        let confirm = window.confirm(`Delete ${contactToDelete.name} ?`)\r\n        if (confirm) {\r\n            contactInfoService\r\n                .deleteContact(id)\r\n                .then(()=>\r\n                {setPersons(persons.filter(p => p !== contactToDelete))\r\n                setnMessage(`Deleted ${contactToDelete.name}`)\r\n                setTimeout(() => {\r\n                    setnMessage(null)\r\n                }, 5000)})\r\n                .catch(error=>{\r\n                    setnMessage(`Information of ${contactToDelete.name} has already been removed from the server.`)\r\n                    setTimeout(() => {\r\n                        setnMessage(null)\r\n                    }, 5000)\r\n                    setPersons(persons.filter(p => p !== contactToDelete))\r\n                })\r\n        } \r\n    }\r\n     \r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n\r\n            <Notification message={nmessage} />\r\n\r\n            <Filter handleChange={handleFilterChange}/>\r\n\r\n            <h3>Add a new</h3>\r\n\r\n            <PersonForm saveName={saveName} newName={newName} newNum={newNum} handleNameChange={handleNameChange} handleNumChange={handleNumChange}/>\r\n\r\n            <h3>Numbers</h3>\r\n\r\n            <Persons persons={persons} deleteContact={deleteContact} searchQuery={searchQuery}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}